@echo off
setlocal enabledelayedexpansion
title Deploy to origin/main (force replace)

:: ===== –ü–ê–†–ê–ú–ï–¢–†–´ =====
set "REPO_URL=https://github.com/nikarello/wagich.git"
set "BRANCH=main"
set "COMMIT_MSG=üîÑ –ü–æ–ª–Ω–∞—è –∑–∞–º–µ–Ω–∞ main –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫–æ–¥ —Å–∞–π—Ç–∞"
set "MAKE_REMOTE_BACKUP=1"   :: 1 ‚Äî —Å–æ–∑–¥–∞—Ç—å —Ç–µ–≥-–±—ç–∫–∞–ø —Ç–µ–∫—É—â–µ–≥–æ origin/main –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—å—é, 0 ‚Äî –Ω–µ –¥–µ–ª–∞—Ç—å

:: ===== –ü—Ä–æ–≤–µ—Ä–∫–∞ Git =====
git --version >nul 2>&1
if errorlevel 1 (
  echo ‚ùå Git –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ PATH. –£—Å—Ç–∞–Ω–æ–≤–∏ Git –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏.
  pause
  exit /b
)

:: ===== –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –º—ã –≤ git-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ =====
if not exist ".git" (
  echo ‚ÑπÔ∏è  –¢–µ–∫—É—â–∞—è –ø–∞–ø–∫–∞ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è git-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é...
  git init || (echo ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å git init & pause & exit /b)
)

:: ===== –ù–∞—Å—Ç—Ä–æ–π–∫–∞/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ origin =====
git remote get-url origin >nul 2>&1
if errorlevel 1 (
  echo ‚ÑπÔ∏è  –î–æ–±–∞–≤–ª—è—é origin: %REPO_URL%
  git remote add origin %REPO_URL% || (echo ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å origin & pause & exit /b)
) else (
  git remote set-url origin %REPO_URL% >nul 2>&1
)

:: ===== –ü–æ–¥—Ç—è–Ω—É—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ origin (–µ—Å–ª–∏ –µ—Å—Ç—å) =====
git fetch origin --prune >nul 2>&1

:: ===== –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –±—ç–∫–∞–ø–Ω—É—Ç—å —Ç–µ–∫—É—â–∏–π origin/main –≤ —Ç–µ–≥ =====
if "%MAKE_REMOTE_BACKUP%"=="1" (
  for /f "tokens=1" %%H in ('git ls-remote origin %BRANCH% ^| findstr /r "refs/heads/%BRANCH%$"') do set "REMOTE_SHA=%%H"
  if defined REMOTE_SHA (
    set "TS=%date:~-4%%date:~3,2%%date:~0,2%_%time:~0,2%%time:~3,2%%time:~6,2%"
    set "TS=%TS: =0%"
    set "BACKUP_TAG=backup-%BRANCH%-%TS%"
    echo üíæ –ë—ç–∫–∞–ø origin/%BRANCH% –≤ —Ç–µ–≥ %BACKUP_TAG% (%REMOTE_SHA%)
    git tag -f "%BACKUP_TAG%" %REMOTE_SHA% >nul 2>&1
    git push origin "refs/tags/%BACKUP_TAG%" >nul 2>&1
  ) else (
    echo ‚ÑπÔ∏è  origin/%BRANCH% –ø–æ–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ‚Äî –±—ç–∫–∞–ø –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.
  )
)

:: ===== –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è/—Å–æ–∑–¥–∞—Ç—å –ª–æ–∫–∞–ª—å–Ω—É—é main =====
echo üîÄ –ü–µ—Ä–µ–∫–ª—é—á–∞—é—Å—å –Ω–∞ %BRANCH%...
git checkout -B %BRANCH% || (echo ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ %BRANCH% & pause & exit /b)

:: ===== –°—Ç–∞–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∫–æ–º–º–∏—Ç =====
echo ‚ûï –°—Ç–∞–¥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤...
git add -A

echo üìù –ö–æ–º–º–∏—Ç...
git commit -m "%COMMIT_MSG%" >nul 2>&1
if errorlevel 1 (
  echo ‚ÑπÔ∏è  –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π ‚Äî —Å–æ–∑–¥–∞—é –ø—É—Å—Ç–æ–π –∫–æ–º–º–∏—Ç –¥–ª—è —Ñ–∏–∫—Å–∞—Ü–∏–∏ —Å–Ω–∞–ø—à–æ—Ç–∞.
  git commit --allow-empty -m "%COMMIT_MSG%" || (echo ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–º–∏—Ç & pause & exit /b)
)

:: ===== –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ force-push =====
echo.
echo ‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—à (force) –≤ origin/%BRANCH%.
echo     –≠—Ç–æ –ø–µ—Ä–µ–∑–∞–ø–∏—à–µ—Ç —É–¥–∞–ª—ë–Ω–Ω—É—é –≤–µ—Ç–∫—É –µ—ë —Ç–µ–∫—É—â–µ–π –∏—Å—Ç–æ—Ä–∏–µ–π.
echo.
choice /C YN /M "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å?"
if errorlevel 2 (
  echo –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.
  pause
  exit /b
)

:: ===== Force push –Ω–∞ origin/main =====
echo üöÄ –ü—É–±–ª–∏–∫—É—é –≤ origin/%BRANCH% (force)...
git push -f origin %BRANCH%
if errorlevel 1 (
  echo ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å push.
  pause
  exit /b
)

echo ‚úÖ –ì–æ—Ç–æ–≤–æ! origin/%BRANCH% –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–º–µ–Ω—ë–Ω –∞–∫—Ç—É–∞–ª—å–Ω—ã–º –∫–æ–¥–æ–º.
echo    (–ï—Å–ª–∏ –≤–∫–ª—é—á—ë–Ω –±—ç–∫–∞–ø, —Ç–µ–≥ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏: %BACKUP_TAG%)
pause
